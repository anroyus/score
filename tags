!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -lm$/;"	m
DELETE	Makefile	/^	DELETE = del$/;"	m
DELETE	Makefile	/^	DELETE = rm -f$/;"	m
GENFLOAT_H_INCLUDED	genFloat.h	2;"	d
HEAPSORT_H_INCLUDED	heapsort.h	2;"	d
MAX_ALLOWED_SIZE	main.c	15;"	d	file:
MAX_FLOATS_READ_IN_HEAP	main.c	14;"	d	file:
Node_list	main.c	/^heapNode *Node_list = NULL;$/;"	v
UNAME	Makefile	/^UNAME := $(shell uname)$/;"	m
build_max_heap	heapsort.c	/^void build_max_heap(float *A, int len)$/;"	f
call_heapsort	main.c	/^int call_heapsort (int total_chunks, int max_floats_read)$/;"	f
create_sorted_heap_output	main.c	/^void create_sorted_heap_output (heapNode *A, int total_chunks, int max_floats)$/;"	f
dep	Makefile	/^dep = $(obj:.o=.d) # one dependency file for each source$/;"	m
display_heap	heapsort.c	/^void display_heap(float *A, int len)$/;"	f
floatList	main.c	/^float *floatList = NULL, *zscoreList=NULL;$/;"	v
genFloat	genFloat.c	/^void genFloat(char* inputfile, int MAX_FLOATS)$/;"	f
heapNode	heapsort.h	/^typedef struct heapNode{$/;"	s
heapNode	heapsort.h	/^} heapNode ;$/;"	t	typeref:struct:heapNode
left	heapsort.c	/^int left ( int i)$/;"	f
main	main.c	/^int main(int argc, char **argv)$/;"	f
max_heapify	heapsort.c	/^void max_heapify (float *A, int index, int len)$/;"	f
max_heapsort	heapsort.c	/^void max_heapsort (float *A, int len)    $/;"	f
mean	main.c	/^float mean = 0.0;$/;"	v
merge	main.c	/^void merge(float * lst, int a, int b, int s ) $/;"	f
mergesort	main.c	/^void mergesort(float * lst, int a, int b)$/;"	f
obj	Makefile	/^obj = $(src:.c=.o)$/;"	m
openFile	heapsort.c	/^FILE* openFile(char* fileName, char* mode)$/;"	f
parent	heapsort.c	/^int parent (int i)$/;"	f
printBanner	main.c	/^void printBanner()$/;"	f
right	heapsort.c	/^int right ( int i)$/;"	f
root_element	heapsort.h	/^        float *root_element;           \/\/value$/;"	m	struct:heapNode
root_index	heapsort.h	/^        FILE* root_index;              \/\/position of the floating point number in the file$/;"	m	struct:heapNode
src	Makefile	/^src = $(wildcard *.c)$/;"	m
standard_deviation	main.c	/^float standard_deviation = 0.0;$/;"	v
swap	heapsort.c	/^void swap ( float *px, float *py)$/;"	f
zscoreList	main.c	/^float *floatList = NULL, *zscoreList=NULL;$/;"	v
zscore_calculator	main.c	/^void zscore_calculator (int total_zscores)$/;"	f
